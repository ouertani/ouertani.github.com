<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    
    <title>Ouertani Personal Blog</title>
    
    
    <description>This website is a virtual proof that I&apos;m awesome</description>
    
    <link></link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    
    
      <item>
        <title>Rest with Scala and Vert.x</title>
        <description>
          
          A previous post introduced some features of using Scala with Vert.x. This post covers how to publish Rest web services in an elegant and simple fashion. As in the previous post, Examples in Java and Scala are presented, source code been hosted on GitHub as part of lang-scala https://github.com/ouertani/vert.x/tree/master/vertx-lang/vertx-lang-scala I-...
        </description>
        <pubDate>Sat, 09 Mar 2013 00:24:00 -0500</pubDate>
        <link>/blog/2013/03/09/rest-with-scala-and-vert-dot-x/</link>
        <guid isPermaLink="true">/blog/2013/03/09/rest-with-scala-and-vert-dot-x/</guid>
      </item>
    
      <item>
        <title>Fun with Scala and Vert.x</title>
        <description>
          
          Vert.x is a polyglot event-driven application framework that runs on the Java Virtual Machine (JAVA 7 is the minimum supported version). Like Node.js, Vert.x is asynchronous and scalable, and lets developers build modern and effective web applications. Being polyglot, Vert.x can be used in many flavors, among which : JavaScript,CoffeeScript,...
        </description>
        <pubDate>Tue, 12 Feb 2013 18:43:00 -0500</pubDate>
        <link>/blog/2013/02/12/fun-with-scala-and-vert-dot-x/</link>
        <guid isPermaLink="true">/blog/2013/02/12/fun-with-scala-and-vert-dot-x/</guid>
      </item>
    
      <item>
        <title>Play 2.1 Scala 2.10 and String Interpolation</title>
        <description>
          
          Play Roadmap has been published. The major feature will be the support of scala 2.10 version. By using Play 2.1 we can start profiting with String interpolation STRING INTERPOLATION: QUICK EXAMPLE ? val n = 20 &quot;Bob is &quot;+n+&quot; years old&quot; can be replaced by : s&quot;Bob is $n years...
        </description>
        <pubDate>Thu, 18 Oct 2012 19:00:00 -0400</pubDate>
        <link>/blog/2012/10/18/getting-started-with-play-2-dot-1/</link>
        <guid isPermaLink="true">/blog/2012/10/18/getting-started-with-play-2-dot-1/</guid>
      </item>
    
      <item>
        <title>Play 2.1 , Scala 2.10 and Slick 0.11.1</title>
        <description>
          
          Starting from scala 2.10 version , Slick will be by defaut the database manager. In addition, Playframework also will be based on scala 2.10 since version 2.1. In this tutorial, I will try to present an example using the last version of slick and scalatest based on scala 2.10.0-M7 and...
        </description>
        <pubDate>Tue, 09 Oct 2012 15:17:00 -0400</pubDate>
        <link>/blog/2012/10/09/play-2-dot-1/</link>
        <guid isPermaLink="true">/blog/2012/10/09/play-2-dot-1/</guid>
      </item>
    
      <item>
        <title>XML/RPC driver as JCA Scala connector</title>
        <description>
          
          Interoperability and reusability are key features of SOA architecture. The Java EE Connector architecture defines a standard architecture for connecting the Java EE platform to heterogeneous EISs. This article presents an XML/RPC adapter using a Scala JCA outbound connector to an IN/AIR legacy system. JCA and integration JCA 1.6 p...
        </description>
        <pubDate>Wed, 26 Sep 2012 19:41:00 -0400</pubDate>
        <link>/blog/2012/09/26/xml-slash-rpc-driver-as-jca-scala-connector/</link>
        <guid isPermaLink="true">/blog/2012/09/26/xml-slash-rpc-driver-as-jca-scala-connector/</guid>
      </item>
    
      <item>
        <title>XML-RPC using scala</title>
        <description>
          
          Purpose Calling remote procedure using XML-RPC and Scala. Introduction On Telecom IT environment and specially middelware solution, we will rarely do all the work but rather delegate some of business process to other tiers. Web service communications is heavy used between solutions. However, many IT node continues to support older...
        </description>
        <pubDate>Fri, 29 Jun 2012 02:03:00 -0400</pubDate>
        <link>/blog/2012/06/29/xml-rpc-using-scala/</link>
        <guid isPermaLink="true">/blog/2012/06/29/xml-rpc-using-scala/</guid>
      </item>
    
      <item>
        <title>Jaxws Header : Part 2 : Server Side</title>
        <description>
          
          Purpose Manipulating JAXWS header on the server Side like reading WSS username token, logging saop message and publish a specific header. Introduction On Telecom IT environment and specially middelware solution web service communications are heavy used between solutions. This tutorial aims to introduce using handler on server side by publishing...
        </description>
        <pubDate>Thu, 28 Jun 2012 03:19:00 -0400</pubDate>
        <link>/blog/2012/06/28/jaxws-header-part-2-server-side/</link>
        <guid isPermaLink="true">/blog/2012/06/28/jaxws-header-part-2-server-side/</guid>
      </item>
    
      <item>
        <title>Sending an Email using the JavaMail Session and Glassfish</title>
        <description>
          
          Purpose This tutorial is a supplement to the article of oracle published here. After reading this later, I decided to share some tips about this EE environment JavaMail api configuration. Introduction Two years ago, we decided to move to JEE 6 for our enterprise solutions and take a lot of...
        </description>
        <pubDate>Thu, 28 Jun 2012 02:18:00 -0400</pubDate>
        <link>/blog/2012/06/28/sending-an-email-using-the-javamail-session-and-glassfish/</link>
        <guid isPermaLink="true">/blog/2012/06/28/sending-an-email-using-the-javamail-session-and-glassfish/</guid>
      </item>
    
      <item>
        <title>JAX-WS Header : Part 1 the Client Side</title>
        <description>
          
          Purpose Manipulating JAXWS header on the client Side like adding WSS username token or logging saop message. Introduction On Telecom IT environment and specially middelware solution, we will rarely do all the work but rather delegate some of business process to other tiers. Web service communications is heavy used between...
        </description>
        <pubDate>Wed, 27 Jun 2012 03:32:00 -0400</pubDate>
        <link>/blog/2012/06/27/jax-ws-header-part-1-the-client-side/</link>
        <guid isPermaLink="true">/blog/2012/06/27/jax-ws-header-part-1-the-client-side/</guid>
      </item>
    
      <item>
        <title>EE 6 Environmental Enterprise Entries and Glassfish</title>
        <description>
          
          PURPOSE This tutorial is a supplement to the article of oracle published here. After reading this later, I decided to share some tips about this EE environment configuration. INTRODUCTION Two years ago, we decided to move to JEE 6 for our enterprise solutions and take a lot of fun with...
        </description>
        <pubDate>Sun, 24 Jun 2012 02:55:00 -0400</pubDate>
        <link>/blog/2012/06/24/ee-6-environmental-enterprise-entries-and-glassfish/</link>
        <guid isPermaLink="true">/blog/2012/06/24/ee-6-environmental-enterprise-entries-and-glassfish/</guid>
      </item>
    
      <item>
        <title>Basic MDB with Scala</title>
        <description>
          
          While I am Akka fun, Typesafe follower, in this post I will continue presenting scala on JEE 6 environment and introduce basic message driven bean (MDB ) using scala language. As an example let’s take a simple one MDB that will consome operation command like add and substract and my...
        </description>
        <pubDate>Sun, 11 Sep 2011 03:41:00 -0400</pubDate>
        <link>/blog/2011/09/11/basic-mdb-with-scala/</link>
        <guid isPermaLink="true">/blog/2011/09/11/basic-mdb-with-scala/</guid>
      </item>
    
      <item>
        <title>Basic WS with Scala</title>
        <description>
          
          I recently had a chance to work on building SOA platforme using JEE 6 and Scala language. I will share here some snippets my be helpfull to start publishing web services using Scala, Sbt and JAX-WS. Consider the example to calculate the quotient and remainder using euclidean algorithm. Not very...
        </description>
        <pubDate>Sat, 10 Sep 2011 03:55:00 -0400</pubDate>
        <link>/blog/2011/09/10/basic-ws-with-scala/</link>
        <guid isPermaLink="true">/blog/2011/09/10/basic-ws-with-scala/</guid>
      </item>
    
      <item>
        <title>WSDL integration problem : Two declarations cause a collision</title>
        <description>
          
          Integration always hides some surprises especially when it comes to old systems where quick solutions aren’t the first aid. In this post, we present a strange and rare situation when requesting WS using an old existing WSDL. To make things simple bellow the wsdl and xsd samples : OldExistingWsService.wsdl &amp;lt;!--?xml...
        </description>
        <pubDate>Thu, 30 Jun 2011 04:10:00 -0400</pubDate>
        <link>/blog/2011/06/30/wsdl-integration-problem-two-declarations-cause-a-collision/</link>
        <guid isPermaLink="true">/blog/2011/06/30/wsdl-integration-problem-two-declarations-cause-a-collision/</guid>
      </item>
    
      <item>
        <title>Scala try-with-resources</title>
        <description>
          
          Have you ever had this duplication of code in java? public void doQuery(String q) throws SQLException { PreparedStatement preparedStatement = null; ResultSet resultSet = null; Connection conn = null; try { conn = getConnection(); preparedStatement = conn.prepareStatement(q); resultSet = preparedStatement.executeQuery(); } finally { close(resultSet); close(preparedStatement); close(conn); } } private static...
        </description>
        <pubDate>Mon, 06 Dec 2010 04:29:00 -0500</pubDate>
        <link>/blog/2010/12/06/scala-try-with-resources/</link>
        <guid isPermaLink="true">/blog/2010/12/06/scala-try-with-resources/</guid>
      </item>
    
  </channel>
</rss>
